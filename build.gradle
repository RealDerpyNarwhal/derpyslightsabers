plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Official Maven repositories
	mavenCentral()
	mavenLocal()

	// GeckoLib repository
	maven {
		name = 'GeckoLib'; url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/';
		content { includeGroupByRegex("software\\.bernie.*"); includeGroup("com.eliotlash.mclib") }
	}
	maven { name = "JitPack"; url = 'https://jitpack.io' }
	maven { name = "Ladysnake"; url = 'https://maven.ladysnake.org/releases' }
	maven { name = "WispForest"; url = 'https://maven.wispforest.io/releases/' }
	maven { name = "SmartBrainLib"; url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/" }
	maven { name = "BlameJared"; url = 'https://maven.blamejared.com' }
	maven { name = "TerraformersMC"; url = "https://maven.terraformersmc.com/releases" }
	maven { name = "Shedaniel"; url = "https://maven.shedaniel.me/" }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	implementation 'org.jetbrains:annotations:23.0.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation("com.eliotlash.mclib:mclib:20")
	implementation('org.json:json:20231013')
	include modImplementation('org.json:json:20230227')

	// Fabric API modules
	Set<String> apiModules = [
			"fabric-api-base",
			"fabric-resource-loader-v0"
	]
	apiModules.forEach {
		modImplementation(fabricApi.module(it, project.fabric_version))
	}
	// GeckoLib (Fabric)
	modImplementation("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
	modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
	modImplementation "org.ladysnake:satin:${satin_version}"

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-block:${project.cca_version}"

	// MixinExtras
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.2.0"))
	implementation(include("io.github.llamalad7:mixinextras-fabric:0.2.0"))
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.3.2")))

	modApi("net.tslat.smartbrainlib:SmartBrainLib-fabric-${project.minecraft_version}:${project.sbl_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("com.github.Virtuoel:Pehkui:${pehkui_version}", {
		exclude group: "net.fabricmc.fabric-api"
	})
	modImplementation fileTree(dir: 'libs', include: ['*.jar'])
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}